
/*** sends output to all users if area==0                       ***/
/*** else only users in same area                               ***/
/*----------------------------------------------------------------*/
/* str  - what to print                                           */
/* area - -1 = login, -2 = pre-login, -5 = wizards only,          */
/*         0 and above - any room                                 */
/* user - the one who did it                                      */
/* send_to_user = 0 all on system 1 = in room                     */
/* who_did = user                                                 */
/* mode = normal - 0, bold = 1                                    */
/* type = message type                                            */
/*----------------------------------------------------------------*/

void writeall_str(char *str, int area, int user, int send_to_user, int who_did, int mode, int type, int sw)
{
int u,i=0,z=0;
int gagged=0,gravoked=0;
char str2[ARR_SIZE];

str2[0]=0;

/* we do this because in a muzzle the victim is the username in	*/
/* the string, not the user who DID the command			*/
/*
if (type == MUZZLE) strcpy(name,strip_color(ustr[user].say_name));
else strcpy(name,strip_color(ustr[who_did].say_name));
*/

/* if (str[0]!=' ') str[0]=toupper(str[0]); */

/*---------------------------------------*/
/* added for btell                       */
/*---------------------------------------*/

 if (area == WIZ_ONLY)
   {
     for (u=0;u<MAX_USERS;++u)
       {
        if (!user_wants_message(u,type)) continue;

/* WRITE CODE TO CHECK THIS FOR ONLY TYPE OF WIZT */
if (type == WIZT) {
/* Check if command was revoked from user */
 for (z=0;z<MAX_GRAVOKES;++z) {
	if (!is_revoke(ustr[u].revokes[z])) continue;
	if (strip_com(ustr[u].revokes[z])==get_com_num_plain(".wiztell")) {
		gravoked=1; break;
	}
   }
if (gravoked==1) { gravoked=0; continue; }
gravoked=0;
z=0;

/* Check if command was granted to user */
 if (ustr[u].super < WIZ_LEVEL && !ustr[u].logging_in && u != user && ustr[u].area!=-1) {
  for (z=0;z<MAX_GRAVOKES;++z) {
        if (!is_grant(ustr[u].revokes[z])) continue;
        if (strip_com(ustr[u].revokes[z])==get_com_num_plain(".wiztell")) {
                gravoked=1; break;
          }
  } /* end of for */
 } /* end of if lower level */
} /* end of if WIZT */
        
	if (((ustr[u].super >= WIZ_LEVEL) || (gravoked==1)) && !ustr[u].logging_in && u != user && ustr[u].area!=-1)  
	  {
	   if (mode == BOLD)
	     {
	       write_hilite(u,str);
	     }
	    else
	     {
	      write_str(u,str);
	     }
          } /* end of if wiz level */
	gravoked=0;
        } /* end of for */
    return;
   } /* end of if area */
   
/*---------------------------------------*/
/* normal write to all users             */
/*---------------------------------------*/
   
for (u=0; u<MAX_USERS; ++u) {
str2[0]=0;
        if ((ustr[u].logging_in==11) || (ustr[u].logging_in==12)) continue;

	if ((!send_to_user && user==u) ||  ustr[u].area== -1) continue;
	    
	if (!user_wants_message(u,type)) continue;
    
        if (!strcmp(ustr[user].mutter,ustr[u].say_name)) continue;

        /* An incoming connection message for monitoring people */
        if (area == -2) {
           if (ustr[u].monitor > 1) {
            if (mode == BOLD)
             write_hilite(u,str);
            else
             write_str(u,str);
            }
           continue;
          } /* end of if area == -2 */

        /* A normal login */
        if (type == LOGIO)
           {
                write_str(u,str);
                continue;
           }

        /* See if u has user gagged */
        for (i=0; i<NUM_IGN_FLAGS; ++i) {
           if (type==gagged_types[i]) {
             if (!check_gag(user,u,1)) { gagged=1; break; }
             }
          } /* end of for */
        if (gagged) {
          gagged=0; i=0;
          continue;
          }
        i=0;

        if (ustr[u].area==ustr[user].area || !area)  
	  { 
	    if ((ustr[u].monitor==1) || (ustr[u].monitor==3)) {
		if (!ustr[who_did].vis || 
		     type == ECHOM     || 
		     type == BCAST     || 
		     type == KILL      || 
		     type == MOVE      || 
		     type == PICTURE   ||
		     type == GREET)
		  {
		   strcpy(str2,"<");
		   strcat(str2,ustr[who_did].say_name);
		   strcat(str2,"> ");
		  }
		else strcpy(str2,"");

	    strcat(str2,str);
	    } /* end of monitoring if */
	    else {
	    strcpy(str2,str);
	    } /* end of else not monitoring */

	       if (mode == BOLD)
	         {
	          write_hilite(u,str2);
	         }
	        else if (mode == BEEPS)
	         {
                  if (user_wants_message(u,BEEPS))
                   strcat(str2,"\07");
	          write_str(u,str2);
	         }
	        else
	         {
	          write_str(u,str2);
	         }

	  } /* end of if same area */
	} /* end of main user for */
}
